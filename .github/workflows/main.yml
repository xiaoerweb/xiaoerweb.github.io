name: Deploy Hexo to GitHub Pages

on:
  push:
    branches:
      - main  # 主分支名称

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出主仓库代码并初始化子模块
      - name: Checkout code with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive  # 递归初始化子模块
          fetch-depth: 0         # 拉取完整提交历史（确保子模块正确更新）

      # 2. 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"     # 推荐使用 LTS 版本
          cache: npm

      # 3. 缓存 node_modules 加速构建
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            themes/**/node_modules  # 缓存子模块的依赖（如果主题有独立依赖）
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      # 4. 安装全局 Hexo CLI 和项目依赖
      - name: Install dependencies
        run: |
          npm install -g hexo-cli
          npm install

      # 5. 更新子模块（可选，确保子模块为最新）
      - name: Update submodules
        run: |
          git submodule update --init --remote --recursive

      # 6. 生成静态文件
      - name: Generate static files
        run: |
          hexo clean
          hexo generate

      # 7. 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          external_repository: xiaoerweb/xiaoerweb.github.io  # 替换为你的 Pages 仓库
          publish_branch: main  # 目标分支（通常为 gh-pages 或 main）
          keep_files: false     # 清理旧文件
